#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RobotServ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DatabaseRobot")]
	public partial class DataClassesInterfaceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGameFinancialRow(GameFinancialRow instance);
    partial void UpdateGameFinancialRow(GameFinancialRow instance);
    partial void DeleteGameFinancialRow(GameFinancialRow instance);
    partial void InsertWordCensor(WordCensor instance);
    partial void UpdateWordCensor(WordCensor instance);
    partial void DeleteWordCensor(WordCensor instance);
    partial void InsertGameFundingRecord(GameFundingRecord instance);
    partial void UpdateGameFundingRecord(GameFundingRecord instance);
    partial void DeleteGameFundingRecord(GameFundingRecord instance);
    partial void InsertGameTip(GameTip instance);
    partial void UpdateGameTip(GameTip instance);
    partial void DeleteGameTip(GameTip instance);
    partial void InsertGeneralSettingRow(GeneralSettingRow instance);
    partial void UpdateGeneralSettingRow(GeneralSettingRow instance);
    partial void DeleteGeneralSettingRow(GeneralSettingRow instance);
    partial void InsertInGameDiscussion(InGameDiscussion instance);
    partial void UpdateInGameDiscussion(InGameDiscussion instance);
    partial void DeleteInGameDiscussion(InGameDiscussion instance);
    partial void InsertMatch(Match instance);
    partial void UpdateMatch(Match instance);
    partial void DeleteMatch(Match instance);
    partial void InsertMatchArena(MatchArena instance);
    partial void UpdateMatchArena(MatchArena instance);
    partial void DeleteMatchArena(MatchArena instance);
    partial void InsertNewReelEvent(NewReelEvent instance);
    partial void UpdateNewReelEvent(NewReelEvent instance);
    partial void DeleteNewReelEvent(NewReelEvent instance);
    partial void InsertPlayer(Player instance);
    partial void UpdatePlayer(Player instance);
    partial void DeletePlayer(Player instance);
    partial void InsertPlayerRobot(PlayerRobot instance);
    partial void UpdatePlayerRobot(PlayerRobot instance);
    partial void DeletePlayerRobot(PlayerRobot instance);
    partial void InsertRobotMatchResult(RobotMatchResult instance);
    partial void UpdateRobotMatchResult(RobotMatchResult instance);
    partial void DeleteRobotMatchResult(RobotMatchResult instance);
    partial void InsertRobotStat(RobotStat instance);
    partial void UpdateRobotStat(RobotStat instance);
    partial void DeleteRobotStat(RobotStat instance);
    partial void InsertSteamWalletPaymentRecord(SteamWalletPaymentRecord instance);
    partial void UpdateSteamWalletPaymentRecord(SteamWalletPaymentRecord instance);
    partial void DeleteSteamWalletPaymentRecord(SteamWalletPaymentRecord instance);
    partial void InsertThreadForum(ThreadForum instance);
    partial void UpdateThreadForum(ThreadForum instance);
    partial void DeleteThreadForum(ThreadForum instance);
    partial void InsertThreadReply(ThreadReply instance);
    partial void UpdateThreadReply(ThreadReply instance);
    partial void DeleteThreadReply(ThreadReply instance);
    partial void InsertTutorial(Tutorial instance);
    partial void UpdateTutorial(Tutorial instance);
    partial void DeleteTutorial(Tutorial instance);
    partial void InsertTutorialReply(TutorialReply instance);
    partial void UpdateTutorialReply(TutorialReply instance);
    partial void DeleteTutorialReply(TutorialReply instance);
    #endregion
		
		public DataClassesInterfaceDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseRobotConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesInterfaceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesInterfaceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesInterfaceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesInterfaceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GameFinancialRow> GameFinancialRows
		{
			get
			{
				return this.GetTable<GameFinancialRow>();
			}
		}
		
		public System.Data.Linq.Table<WordCensor> WordCensors
		{
			get
			{
				return this.GetTable<WordCensor>();
			}
		}
		
		public System.Data.Linq.Table<GameFundingRecord> GameFundingRecords
		{
			get
			{
				return this.GetTable<GameFundingRecord>();
			}
		}
		
		public System.Data.Linq.Table<GameTip> GameTips
		{
			get
			{
				return this.GetTable<GameTip>();
			}
		}
		
		public System.Data.Linq.Table<GeneralSettingRow> GeneralSettingRows
		{
			get
			{
				return this.GetTable<GeneralSettingRow>();
			}
		}
		
		public System.Data.Linq.Table<InGameDiscussion> InGameDiscussions
		{
			get
			{
				return this.GetTable<InGameDiscussion>();
			}
		}
		
		public System.Data.Linq.Table<Match> Matches
		{
			get
			{
				return this.GetTable<Match>();
			}
		}
		
		public System.Data.Linq.Table<MatchArena> MatchArenas
		{
			get
			{
				return this.GetTable<MatchArena>();
			}
		}
		
		public System.Data.Linq.Table<NewReelEvent> NewReelEvents
		{
			get
			{
				return this.GetTable<NewReelEvent>();
			}
		}
		
		public System.Data.Linq.Table<Player> Players
		{
			get
			{
				return this.GetTable<Player>();
			}
		}
		
		public System.Data.Linq.Table<PlayerRobot> PlayerRobots
		{
			get
			{
				return this.GetTable<PlayerRobot>();
			}
		}
		
		public System.Data.Linq.Table<RobotMatchResult> RobotMatchResults
		{
			get
			{
				return this.GetTable<RobotMatchResult>();
			}
		}
		
		public System.Data.Linq.Table<RobotStat> RobotStats
		{
			get
			{
				return this.GetTable<RobotStat>();
			}
		}
		
		public System.Data.Linq.Table<SteamWalletPaymentRecord> SteamWalletPaymentRecords
		{
			get
			{
				return this.GetTable<SteamWalletPaymentRecord>();
			}
		}
		
		public System.Data.Linq.Table<ThreadForum> ThreadForums
		{
			get
			{
				return this.GetTable<ThreadForum>();
			}
		}
		
		public System.Data.Linq.Table<ThreadReply> ThreadReplies
		{
			get
			{
				return this.GetTable<ThreadReply>();
			}
		}
		
		public System.Data.Linq.Table<Tutorial> Tutorials
		{
			get
			{
				return this.GetTable<Tutorial>();
			}
		}
		
		public System.Data.Linq.Table<TutorialReply> TutorialReplies
		{
			get
			{
				return this.GetTable<TutorialReply>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameFinancialRow")]
	public partial class GameFinancialRow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _ID_Player;
		
		private int _ID_Robot;
		
		private System.DateTime _EventDate;
		
		private long _ID_Match;
		
		private decimal _MoneyAmount;
		
		private string _Reason;
		
		private int _ID_PlayerInitiater;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnID_RobotChanging(int value);
    partial void OnID_RobotChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnID_MatchChanging(long value);
    partial void OnID_MatchChanged();
    partial void OnMoneyAmountChanging(decimal value);
    partial void OnMoneyAmountChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnID_PlayerInitiaterChanging(int value);
    partial void OnID_PlayerInitiaterChanged();
    #endregion
		
		public GameFinancialRow()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Robot", DbType="Int NOT NULL")]
		public int ID_Robot
		{
			get
			{
				return this._ID_Robot;
			}
			set
			{
				if ((this._ID_Robot != value))
				{
					this.OnID_RobotChanging(value);
					this.SendPropertyChanging();
					this._ID_Robot = value;
					this.SendPropertyChanged("ID_Robot");
					this.OnID_RobotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Match", DbType="BigInt NOT NULL")]
		public long ID_Match
		{
			get
			{
				return this._ID_Match;
			}
			set
			{
				if ((this._ID_Match != value))
				{
					this.OnID_MatchChanging(value);
					this.SendPropertyChanging();
					this._ID_Match = value;
					this.SendPropertyChanged("ID_Match");
					this.OnID_MatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal MoneyAmount
		{
			get
			{
				return this._MoneyAmount;
			}
			set
			{
				if ((this._MoneyAmount != value))
				{
					this.OnMoneyAmountChanging(value);
					this.SendPropertyChanging();
					this._MoneyAmount = value;
					this.SendPropertyChanged("MoneyAmount");
					this.OnMoneyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(2050) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PlayerInitiater", DbType="Int NOT NULL")]
		public int ID_PlayerInitiater
		{
			get
			{
				return this._ID_PlayerInitiater;
			}
			set
			{
				if ((this._ID_PlayerInitiater != value))
				{
					this.OnID_PlayerInitiaterChanging(value);
					this.SendPropertyChanging();
					this._ID_PlayerInitiater = value;
					this.SendPropertyChanged("ID_PlayerInitiater");
					this.OnID_PlayerInitiaterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WordCensor")]
	public partial class WordCensor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Word;
		
		private string _Replacement;
		
		private int _CheckPriority;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWordChanging(string value);
    partial void OnWordChanged();
    partial void OnReplacementChanging(string value);
    partial void OnReplacementChanged();
    partial void OnCheckPriorityChanging(int value);
    partial void OnCheckPriorityChanged();
    #endregion
		
		public WordCensor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				if ((this._Word != value))
				{
					this.OnWordChanging(value);
					this.SendPropertyChanging();
					this._Word = value;
					this.SendPropertyChanged("Word");
					this.OnWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Replacement", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Replacement
		{
			get
			{
				return this._Replacement;
			}
			set
			{
				if ((this._Replacement != value))
				{
					this.OnReplacementChanging(value);
					this.SendPropertyChanging();
					this._Replacement = value;
					this.SendPropertyChanged("Replacement");
					this.OnReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPriority", DbType="Int NOT NULL")]
		public int CheckPriority
		{
			get
			{
				return this._CheckPriority;
			}
			set
			{
				if ((this._CheckPriority != value))
				{
					this.OnCheckPriorityChanging(value);
					this.SendPropertyChanging();
					this._CheckPriority = value;
					this.SendPropertyChanged("CheckPriority");
					this.OnCheckPriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameFundingRecord")]
	public partial class GameFundingRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _ID_Player;
		
		private System.DateTime _DateCreated;
		
		private bool _IsCompleted;
		
		private bool _HasBeenProcessed;
		
		private System.DateTime _ProcessDate;
		
		private string _PaypalCode;
		
		private decimal _UsdAmount;
		
		private decimal _GameFundsAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnIsCompletedChanging(bool value);
    partial void OnIsCompletedChanged();
    partial void OnHasBeenProcessedChanging(bool value);
    partial void OnHasBeenProcessedChanged();
    partial void OnProcessDateChanging(System.DateTime value);
    partial void OnProcessDateChanged();
    partial void OnPaypalCodeChanging(string value);
    partial void OnPaypalCodeChanged();
    partial void OnUsdAmountChanging(decimal value);
    partial void OnUsdAmountChanged();
    partial void OnGameFundsAmountChanging(decimal value);
    partial void OnGameFundsAmountChanged();
    #endregion
		
		public GameFundingRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit NOT NULL")]
		public bool IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenProcessed", DbType="Bit NOT NULL")]
		public bool HasBeenProcessed
		{
			get
			{
				return this._HasBeenProcessed;
			}
			set
			{
				if ((this._HasBeenProcessed != value))
				{
					this.OnHasBeenProcessedChanging(value);
					this.SendPropertyChanging();
					this._HasBeenProcessed = value;
					this.SendPropertyChanged("HasBeenProcessed");
					this.OnHasBeenProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDate", DbType="DateTime NOT NULL")]
		public System.DateTime ProcessDate
		{
			get
			{
				return this._ProcessDate;
			}
			set
			{
				if ((this._ProcessDate != value))
				{
					this.OnProcessDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessDate = value;
					this.SendPropertyChanged("ProcessDate");
					this.OnProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaypalCode", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string PaypalCode
		{
			get
			{
				return this._PaypalCode;
			}
			set
			{
				if ((this._PaypalCode != value))
				{
					this.OnPaypalCodeChanging(value);
					this.SendPropertyChanging();
					this._PaypalCode = value;
					this.SendPropertyChanged("PaypalCode");
					this.OnPaypalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsdAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal UsdAmount
		{
			get
			{
				return this._UsdAmount;
			}
			set
			{
				if ((this._UsdAmount != value))
				{
					this.OnUsdAmountChanging(value);
					this.SendPropertyChanging();
					this._UsdAmount = value;
					this.SendPropertyChanged("UsdAmount");
					this.OnUsdAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameFundsAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal GameFundsAmount
		{
			get
			{
				return this._GameFundsAmount;
			}
			set
			{
				if ((this._GameFundsAmount != value))
				{
					this.OnGameFundsAmountChanging(value);
					this.SendPropertyChanging();
					this._GameFundsAmount = value;
					this.SendPropertyChanged("GameFundsAmount");
					this.OnGameFundsAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameTip")]
	public partial class GameTip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TipText;
		
		private string _TipHeading;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTipTextChanging(string value);
    partial void OnTipTextChanged();
    partial void OnTipHeadingChanging(string value);
    partial void OnTipHeadingChanged();
    #endregion
		
		public GameTip()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipText", DbType="NVarChar(2050) NOT NULL", CanBeNull=false)]
		public string TipText
		{
			get
			{
				return this._TipText;
			}
			set
			{
				if ((this._TipText != value))
				{
					this.OnTipTextChanging(value);
					this.SendPropertyChanging();
					this._TipText = value;
					this.SendPropertyChanged("TipText");
					this.OnTipTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipHeading", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TipHeading
		{
			get
			{
				return this._TipHeading;
			}
			set
			{
				if ((this._TipHeading != value))
				{
					this.OnTipHeadingChanging(value);
					this.SendPropertyChanging();
					this._TipHeading = value;
					this.SendPropertyChanged("TipHeading");
					this.OnTipHeadingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralSettingRow")]
	public partial class GeneralSettingRow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public GeneralSettingRow()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(2050) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InGameDiscussion")]
	public partial class InGameDiscussion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _ID_Player;
		
		private System.DateTime _UtcDate;
		
		private string _MessageText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnUtcDateChanging(System.DateTime value);
    partial void OnUtcDateChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    #endregion
		
		public InGameDiscussion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtcDate", DbType="DateTime NOT NULL")]
		public System.DateTime UtcDate
		{
			get
			{
				return this._UtcDate;
			}
			set
			{
				if ((this._UtcDate != value))
				{
					this.OnUtcDateChanging(value);
					this.SendPropertyChanging();
					this._UtcDate = value;
					this.SendPropertyChanged("UtcDate");
					this.OnUtcDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NVarChar(2050) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Match")]
	public partial class Match : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _GameStartDateUTC;
		
		private System.DateTime _GameEndDateUTC;
		
		private int _ID_BotWinner;
		
		private bool _HasFinished;
		
		private string _YouTubeID;
		
		private int _ID_Arena;
		
		private decimal _PrizeMoney;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnGameStartDateUTCChanging(System.DateTime value);
    partial void OnGameStartDateUTCChanged();
    partial void OnGameEndDateUTCChanging(System.DateTime value);
    partial void OnGameEndDateUTCChanged();
    partial void OnID_BotWinnerChanging(int value);
    partial void OnID_BotWinnerChanged();
    partial void OnHasFinishedChanging(bool value);
    partial void OnHasFinishedChanged();
    partial void OnYouTubeIDChanging(string value);
    partial void OnYouTubeIDChanged();
    partial void OnID_ArenaChanging(int value);
    partial void OnID_ArenaChanged();
    partial void OnPrizeMoneyChanging(decimal value);
    partial void OnPrizeMoneyChanged();
    #endregion
		
		public Match()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameStartDateUTC", DbType="DateTime NOT NULL")]
		public System.DateTime GameStartDateUTC
		{
			get
			{
				return this._GameStartDateUTC;
			}
			set
			{
				if ((this._GameStartDateUTC != value))
				{
					this.OnGameStartDateUTCChanging(value);
					this.SendPropertyChanging();
					this._GameStartDateUTC = value;
					this.SendPropertyChanged("GameStartDateUTC");
					this.OnGameStartDateUTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameEndDateUTC", DbType="DateTime NOT NULL")]
		public System.DateTime GameEndDateUTC
		{
			get
			{
				return this._GameEndDateUTC;
			}
			set
			{
				if ((this._GameEndDateUTC != value))
				{
					this.OnGameEndDateUTCChanging(value);
					this.SendPropertyChanging();
					this._GameEndDateUTC = value;
					this.SendPropertyChanged("GameEndDateUTC");
					this.OnGameEndDateUTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BotWinner", DbType="Int NOT NULL")]
		public int ID_BotWinner
		{
			get
			{
				return this._ID_BotWinner;
			}
			set
			{
				if ((this._ID_BotWinner != value))
				{
					this.OnID_BotWinnerChanging(value);
					this.SendPropertyChanging();
					this._ID_BotWinner = value;
					this.SendPropertyChanged("ID_BotWinner");
					this.OnID_BotWinnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFinished", DbType="Bit NOT NULL")]
		public bool HasFinished
		{
			get
			{
				return this._HasFinished;
			}
			set
			{
				if ((this._HasFinished != value))
				{
					this.OnHasFinishedChanging(value);
					this.SendPropertyChanging();
					this._HasFinished = value;
					this.SendPropertyChanged("HasFinished");
					this.OnHasFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YouTubeID", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string YouTubeID
		{
			get
			{
				return this._YouTubeID;
			}
			set
			{
				if ((this._YouTubeID != value))
				{
					this.OnYouTubeIDChanging(value);
					this.SendPropertyChanging();
					this._YouTubeID = value;
					this.SendPropertyChanged("YouTubeID");
					this.OnYouTubeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Arena", DbType="Int NOT NULL")]
		public int ID_Arena
		{
			get
			{
				return this._ID_Arena;
			}
			set
			{
				if ((this._ID_Arena != value))
				{
					this.OnID_ArenaChanging(value);
					this.SendPropertyChanging();
					this._ID_Arena = value;
					this.SendPropertyChanged("ID_Arena");
					this.OnID_ArenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrizeMoney", DbType="Decimal(18,2) NOT NULL")]
		public decimal PrizeMoney
		{
			get
			{
				return this._PrizeMoney;
			}
			set
			{
				if ((this._PrizeMoney != value))
				{
					this.OnPrizeMoneyChanging(value);
					this.SendPropertyChanging();
					this._PrizeMoney = value;
					this.SendPropertyChanged("PrizeMoney");
					this.OnPrizeMoneyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatchArena")]
	public partial class MatchArena : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ArenaName;
		
		private string _ArenaDescription;
		
		private string _BuiltInLevelID;
		
		private string _ExternalURLLocation;
		
		private long _MatchesPlayedHere;
		
		private bool _IsEnabled;
		
		private string _AssetBundleName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArenaNameChanging(string value);
    partial void OnArenaNameChanged();
    partial void OnArenaDescriptionChanging(string value);
    partial void OnArenaDescriptionChanged();
    partial void OnBuiltInLevelIDChanging(string value);
    partial void OnBuiltInLevelIDChanged();
    partial void OnExternalURLLocationChanging(string value);
    partial void OnExternalURLLocationChanged();
    partial void OnMatchesPlayedHereChanging(long value);
    partial void OnMatchesPlayedHereChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnAssetBundleNameChanging(string value);
    partial void OnAssetBundleNameChanged();
    #endregion
		
		public MatchArena()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArenaName", DbType="NVarChar(350) NOT NULL", CanBeNull=false)]
		public string ArenaName
		{
			get
			{
				return this._ArenaName;
			}
			set
			{
				if ((this._ArenaName != value))
				{
					this.OnArenaNameChanging(value);
					this.SendPropertyChanging();
					this._ArenaName = value;
					this.SendPropertyChanged("ArenaName");
					this.OnArenaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArenaDescription", DbType="NVarChar(2050) NOT NULL", CanBeNull=false)]
		public string ArenaDescription
		{
			get
			{
				return this._ArenaDescription;
			}
			set
			{
				if ((this._ArenaDescription != value))
				{
					this.OnArenaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ArenaDescription = value;
					this.SendPropertyChanged("ArenaDescription");
					this.OnArenaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuiltInLevelID", DbType="NVarChar(350) NOT NULL", CanBeNull=false)]
		public string BuiltInLevelID
		{
			get
			{
				return this._BuiltInLevelID;
			}
			set
			{
				if ((this._BuiltInLevelID != value))
				{
					this.OnBuiltInLevelIDChanging(value);
					this.SendPropertyChanging();
					this._BuiltInLevelID = value;
					this.SendPropertyChanged("BuiltInLevelID");
					this.OnBuiltInLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalURLLocation", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string ExternalURLLocation
		{
			get
			{
				return this._ExternalURLLocation;
			}
			set
			{
				if ((this._ExternalURLLocation != value))
				{
					this.OnExternalURLLocationChanging(value);
					this.SendPropertyChanging();
					this._ExternalURLLocation = value;
					this.SendPropertyChanged("ExternalURLLocation");
					this.OnExternalURLLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchesPlayedHere", DbType="BigInt NOT NULL")]
		public long MatchesPlayedHere
		{
			get
			{
				return this._MatchesPlayedHere;
			}
			set
			{
				if ((this._MatchesPlayedHere != value))
				{
					this.OnMatchesPlayedHereChanging(value);
					this.SendPropertyChanging();
					this._MatchesPlayedHere = value;
					this.SendPropertyChanged("MatchesPlayedHere");
					this.OnMatchesPlayedHereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetBundleName", DbType="NVarChar(1050) NOT NULL", CanBeNull=false)]
		public string AssetBundleName
		{
			get
			{
				return this._AssetBundleName;
			}
			set
			{
				if ((this._AssetBundleName != value))
				{
					this.OnAssetBundleNameChanging(value);
					this.SendPropertyChanging();
					this._AssetBundleName = value;
					this.SendPropertyChanged("AssetBundleName");
					this.OnAssetBundleNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewReelEvent")]
	public partial class NewReelEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _DisplayDate;
		
		private int _ID_MainRobot;
		
		private int _NewsType;
		
		private string _NewsText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDisplayDateChanging(System.DateTime value);
    partial void OnDisplayDateChanged();
    partial void OnID_MainRobotChanging(int value);
    partial void OnID_MainRobotChanged();
    partial void OnNewsTypeChanging(int value);
    partial void OnNewsTypeChanged();
    partial void OnNewsTextChanging(string value);
    partial void OnNewsTextChanged();
    #endregion
		
		public NewReelEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayDate", DbType="DateTime NOT NULL")]
		public System.DateTime DisplayDate
		{
			get
			{
				return this._DisplayDate;
			}
			set
			{
				if ((this._DisplayDate != value))
				{
					this.OnDisplayDateChanging(value);
					this.SendPropertyChanging();
					this._DisplayDate = value;
					this.SendPropertyChanged("DisplayDate");
					this.OnDisplayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MainRobot", DbType="Int NOT NULL")]
		public int ID_MainRobot
		{
			get
			{
				return this._ID_MainRobot;
			}
			set
			{
				if ((this._ID_MainRobot != value))
				{
					this.OnID_MainRobotChanging(value);
					this.SendPropertyChanging();
					this._ID_MainRobot = value;
					this.SendPropertyChanged("ID_MainRobot");
					this.OnID_MainRobotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsType", DbType="Int NOT NULL")]
		public int NewsType
		{
			get
			{
				return this._NewsType;
			}
			set
			{
				if ((this._NewsType != value))
				{
					this.OnNewsTypeChanging(value);
					this.SendPropertyChanging();
					this._NewsType = value;
					this.SendPropertyChanged("NewsType");
					this.OnNewsTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsText", DbType="NVarChar(3050) NOT NULL", CanBeNull=false)]
		public string NewsText
		{
			get
			{
				return this._NewsText;
			}
			set
			{
				if ((this._NewsText != value))
				{
					this.OnNewsTextChanging(value);
					this.SendPropertyChanging();
					this._NewsText = value;
					this.SendPropertyChanged("NewsText");
					this.OnNewsTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Player")]
	public partial class Player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DisplayName;
		
		private string _Email;
		
		private string _Password;
		
		private decimal _MoneyWon;
		
		private decimal _Money;
		
		private string _ResetCode;
		
		private string _ImageExt;
		
		private bool _IsPlayer;
		
		private string _SteamID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMoneyWonChanging(decimal value);
    partial void OnMoneyWonChanged();
    partial void OnMoneyChanging(decimal value);
    partial void OnMoneyChanged();
    partial void OnResetCodeChanging(string value);
    partial void OnResetCodeChanged();
    partial void OnImageExtChanging(string value);
    partial void OnImageExtChanged();
    partial void OnIsPlayerChanging(bool value);
    partial void OnIsPlayerChanged();
    partial void OnSteamIDChanging(string value);
    partial void OnSteamIDChanged();
    #endregion
		
		public Player()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyWon", DbType="Decimal(18,2) NOT NULL")]
		public decimal MoneyWon
		{
			get
			{
				return this._MoneyWon;
			}
			set
			{
				if ((this._MoneyWon != value))
				{
					this.OnMoneyWonChanging(value);
					this.SendPropertyChanging();
					this._MoneyWon = value;
					this.SendPropertyChanged("MoneyWon");
					this.OnMoneyWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Decimal(18,2) NOT NULL")]
		public decimal Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetCode", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ResetCode
		{
			get
			{
				return this._ResetCode;
			}
			set
			{
				if ((this._ResetCode != value))
				{
					this.OnResetCodeChanging(value);
					this.SendPropertyChanging();
					this._ResetCode = value;
					this.SendPropertyChanged("ResetCode");
					this.OnResetCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageExt", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ImageExt
		{
			get
			{
				return this._ImageExt;
			}
			set
			{
				if ((this._ImageExt != value))
				{
					this.OnImageExtChanging(value);
					this.SendPropertyChanging();
					this._ImageExt = value;
					this.SendPropertyChanged("ImageExt");
					this.OnImageExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPlayer", DbType="Bit NOT NULL")]
		public bool IsPlayer
		{
			get
			{
				return this._IsPlayer;
			}
			set
			{
				if ((this._IsPlayer != value))
				{
					this.OnIsPlayerChanging(value);
					this.SendPropertyChanging();
					this._IsPlayer = value;
					this.SendPropertyChanged("IsPlayer");
					this.OnIsPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteamID", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string SteamID
		{
			get
			{
				return this._SteamID;
			}
			set
			{
				if ((this._SteamID != value))
				{
					this.OnSteamIDChanging(value);
					this.SendPropertyChanging();
					this._SteamID = value;
					this.SendPropertyChanged("SteamID");
					this.OnSteamIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayerRobot")]
	public partial class PlayerRobot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RobotName;
		
		private int _GamesPlayed;
		
		private int _TotalKills;
		
		private int _TotalDeaths;
		
		private long _TotalPoints;
		
		private decimal _MoneyWon;
		
		private int _ID_PlayerOwner;
		
		private System.Data.Linq.Binary _RobotTemplateImage;
		
		private int _LinesOfCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRobotNameChanging(string value);
    partial void OnRobotNameChanged();
    partial void OnGamesPlayedChanging(int value);
    partial void OnGamesPlayedChanged();
    partial void OnTotalKillsChanging(int value);
    partial void OnTotalKillsChanged();
    partial void OnTotalDeathsChanging(int value);
    partial void OnTotalDeathsChanged();
    partial void OnTotalPointsChanging(long value);
    partial void OnTotalPointsChanged();
    partial void OnMoneyWonChanging(decimal value);
    partial void OnMoneyWonChanged();
    partial void OnID_PlayerOwnerChanging(int value);
    partial void OnID_PlayerOwnerChanged();
    partial void OnRobotTemplateImageChanging(System.Data.Linq.Binary value);
    partial void OnRobotTemplateImageChanged();
    partial void OnLinesOfCodeChanging(int value);
    partial void OnLinesOfCodeChanged();
    #endregion
		
		public PlayerRobot()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RobotName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string RobotName
		{
			get
			{
				return this._RobotName;
			}
			set
			{
				if ((this._RobotName != value))
				{
					this.OnRobotNameChanging(value);
					this.SendPropertyChanging();
					this._RobotName = value;
					this.SendPropertyChanged("RobotName");
					this.OnRobotNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamesPlayed", DbType="Int NOT NULL")]
		public int GamesPlayed
		{
			get
			{
				return this._GamesPlayed;
			}
			set
			{
				if ((this._GamesPlayed != value))
				{
					this.OnGamesPlayedChanging(value);
					this.SendPropertyChanging();
					this._GamesPlayed = value;
					this.SendPropertyChanged("GamesPlayed");
					this.OnGamesPlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalKills", DbType="Int NOT NULL")]
		public int TotalKills
		{
			get
			{
				return this._TotalKills;
			}
			set
			{
				if ((this._TotalKills != value))
				{
					this.OnTotalKillsChanging(value);
					this.SendPropertyChanging();
					this._TotalKills = value;
					this.SendPropertyChanged("TotalKills");
					this.OnTotalKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDeaths", DbType="Int NOT NULL")]
		public int TotalDeaths
		{
			get
			{
				return this._TotalDeaths;
			}
			set
			{
				if ((this._TotalDeaths != value))
				{
					this.OnTotalDeathsChanging(value);
					this.SendPropertyChanging();
					this._TotalDeaths = value;
					this.SendPropertyChanged("TotalDeaths");
					this.OnTotalDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPoints", DbType="BigInt NOT NULL")]
		public long TotalPoints
		{
			get
			{
				return this._TotalPoints;
			}
			set
			{
				if ((this._TotalPoints != value))
				{
					this.OnTotalPointsChanging(value);
					this.SendPropertyChanging();
					this._TotalPoints = value;
					this.SendPropertyChanged("TotalPoints");
					this.OnTotalPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyWon", DbType="Decimal(18,2) NOT NULL")]
		public decimal MoneyWon
		{
			get
			{
				return this._MoneyWon;
			}
			set
			{
				if ((this._MoneyWon != value))
				{
					this.OnMoneyWonChanging(value);
					this.SendPropertyChanging();
					this._MoneyWon = value;
					this.SendPropertyChanged("MoneyWon");
					this.OnMoneyWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PlayerOwner", DbType="Int NOT NULL")]
		public int ID_PlayerOwner
		{
			get
			{
				return this._ID_PlayerOwner;
			}
			set
			{
				if ((this._ID_PlayerOwner != value))
				{
					this.OnID_PlayerOwnerChanging(value);
					this.SendPropertyChanging();
					this._ID_PlayerOwner = value;
					this.SendPropertyChanged("ID_PlayerOwner");
					this.OnID_PlayerOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RobotTemplateImage", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RobotTemplateImage
		{
			get
			{
				return this._RobotTemplateImage;
			}
			set
			{
				if ((this._RobotTemplateImage != value))
				{
					this.OnRobotTemplateImageChanging(value);
					this.SendPropertyChanging();
					this._RobotTemplateImage = value;
					this.SendPropertyChanged("RobotTemplateImage");
					this.OnRobotTemplateImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinesOfCode", DbType="Int NOT NULL")]
		public int LinesOfCode
		{
			get
			{
				return this._LinesOfCode;
			}
			set
			{
				if ((this._LinesOfCode != value))
				{
					this.OnLinesOfCodeChanging(value);
					this.SendPropertyChanging();
					this._LinesOfCode = value;
					this.SendPropertyChanged("LinesOfCode");
					this.OnLinesOfCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RobotMatchResult")]
	public partial class RobotMatchResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ID_Match;
		
		private int _ID_Robot;
		
		private int _BulletsFired;
		
		private int _BulletsHit;
		
		private double _RamDamage;
		
		private double _Health;
		
		private double _TotalPoints;
		
		private double _MinutesSurvived;
		
		private bool _IsSubmitted;
		
		private bool _IsDead;
		
		private int _TotalKills;
		
		private double _DamageReceived;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnID_MatchChanging(long value);
    partial void OnID_MatchChanged();
    partial void OnID_RobotChanging(int value);
    partial void OnID_RobotChanged();
    partial void OnBulletsFiredChanging(int value);
    partial void OnBulletsFiredChanged();
    partial void OnBulletsHitChanging(int value);
    partial void OnBulletsHitChanged();
    partial void OnRamDamageChanging(double value);
    partial void OnRamDamageChanged();
    partial void OnHealthChanging(double value);
    partial void OnHealthChanged();
    partial void OnTotalPointsChanging(double value);
    partial void OnTotalPointsChanged();
    partial void OnMinutesSurvivedChanging(double value);
    partial void OnMinutesSurvivedChanged();
    partial void OnIsSubmittedChanging(bool value);
    partial void OnIsSubmittedChanged();
    partial void OnIsDeadChanging(bool value);
    partial void OnIsDeadChanged();
    partial void OnTotalKillsChanging(int value);
    partial void OnTotalKillsChanged();
    partial void OnDamageReceivedChanging(double value);
    partial void OnDamageReceivedChanged();
    #endregion
		
		public RobotMatchResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Match", DbType="BigInt NOT NULL")]
		public long ID_Match
		{
			get
			{
				return this._ID_Match;
			}
			set
			{
				if ((this._ID_Match != value))
				{
					this.OnID_MatchChanging(value);
					this.SendPropertyChanging();
					this._ID_Match = value;
					this.SendPropertyChanged("ID_Match");
					this.OnID_MatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Robot", DbType="Int NOT NULL")]
		public int ID_Robot
		{
			get
			{
				return this._ID_Robot;
			}
			set
			{
				if ((this._ID_Robot != value))
				{
					this.OnID_RobotChanging(value);
					this.SendPropertyChanging();
					this._ID_Robot = value;
					this.SendPropertyChanged("ID_Robot");
					this.OnID_RobotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BulletsFired", DbType="Int NOT NULL")]
		public int BulletsFired
		{
			get
			{
				return this._BulletsFired;
			}
			set
			{
				if ((this._BulletsFired != value))
				{
					this.OnBulletsFiredChanging(value);
					this.SendPropertyChanging();
					this._BulletsFired = value;
					this.SendPropertyChanged("BulletsFired");
					this.OnBulletsFiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BulletsHit", DbType="Int NOT NULL")]
		public int BulletsHit
		{
			get
			{
				return this._BulletsHit;
			}
			set
			{
				if ((this._BulletsHit != value))
				{
					this.OnBulletsHitChanging(value);
					this.SendPropertyChanging();
					this._BulletsHit = value;
					this.SendPropertyChanged("BulletsHit");
					this.OnBulletsHitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RamDamage", DbType="Float NOT NULL")]
		public double RamDamage
		{
			get
			{
				return this._RamDamage;
			}
			set
			{
				if ((this._RamDamage != value))
				{
					this.OnRamDamageChanging(value);
					this.SendPropertyChanging();
					this._RamDamage = value;
					this.SendPropertyChanged("RamDamage");
					this.OnRamDamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Health", DbType="Float NOT NULL")]
		public double Health
		{
			get
			{
				return this._Health;
			}
			set
			{
				if ((this._Health != value))
				{
					this.OnHealthChanging(value);
					this.SendPropertyChanging();
					this._Health = value;
					this.SendPropertyChanged("Health");
					this.OnHealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPoints", DbType="Float NOT NULL")]
		public double TotalPoints
		{
			get
			{
				return this._TotalPoints;
			}
			set
			{
				if ((this._TotalPoints != value))
				{
					this.OnTotalPointsChanging(value);
					this.SendPropertyChanging();
					this._TotalPoints = value;
					this.SendPropertyChanged("TotalPoints");
					this.OnTotalPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesSurvived", DbType="Float NOT NULL")]
		public double MinutesSurvived
		{
			get
			{
				return this._MinutesSurvived;
			}
			set
			{
				if ((this._MinutesSurvived != value))
				{
					this.OnMinutesSurvivedChanging(value);
					this.SendPropertyChanging();
					this._MinutesSurvived = value;
					this.SendPropertyChanged("MinutesSurvived");
					this.OnMinutesSurvivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmitted", DbType="Bit NOT NULL")]
		public bool IsSubmitted
		{
			get
			{
				return this._IsSubmitted;
			}
			set
			{
				if ((this._IsSubmitted != value))
				{
					this.OnIsSubmittedChanging(value);
					this.SendPropertyChanging();
					this._IsSubmitted = value;
					this.SendPropertyChanged("IsSubmitted");
					this.OnIsSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDead", DbType="Bit NOT NULL")]
		public bool IsDead
		{
			get
			{
				return this._IsDead;
			}
			set
			{
				if ((this._IsDead != value))
				{
					this.OnIsDeadChanging(value);
					this.SendPropertyChanging();
					this._IsDead = value;
					this.SendPropertyChanged("IsDead");
					this.OnIsDeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalKills", DbType="Int NOT NULL")]
		public int TotalKills
		{
			get
			{
				return this._TotalKills;
			}
			set
			{
				if ((this._TotalKills != value))
				{
					this.OnTotalKillsChanging(value);
					this.SendPropertyChanging();
					this._TotalKills = value;
					this.SendPropertyChanged("TotalKills");
					this.OnTotalKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DamageReceived", DbType="Float NOT NULL")]
		public double DamageReceived
		{
			get
			{
				return this._DamageReceived;
			}
			set
			{
				if ((this._DamageReceived != value))
				{
					this.OnDamageReceivedChanging(value);
					this.SendPropertyChanging();
					this._DamageReceived = value;
					this.SendPropertyChanged("DamageReceived");
					this.OnDamageReceivedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RobotStat")]
	public partial class RobotStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _ID_Player;
		
		private int _ID_Robot;
		
		private long _CalcRank;
		
		private long _TotalPoints;
		
		private long _TotalMatches;
		
		private long _TotalBulletsFired;
		
		private long _TotalBulletsHit;
		
		private long _TotalKills;
		
		private long _TotalDeaths;
		
		private long _TotalLinesOfCode;
		
		private long _TotalMultiRobotMatchesPlayed;
		
		private long _TotalMultiRobotMatchesWon;
		
		private long _TotalMatchesWon;
		
		private long _TotalDamageReceived;
		
		private double _RatioKillToDeath;
		
		private double _RatioCodeToScore;
		
		private double _RatioWinToLoss;
		
		private double _RatioHitsToMiss;
		
		private double _RatioMultiRobotMatchWinsToLoss;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnID_RobotChanging(int value);
    partial void OnID_RobotChanged();
    partial void OnCalcRankChanging(long value);
    partial void OnCalcRankChanged();
    partial void OnTotalPointsChanging(long value);
    partial void OnTotalPointsChanged();
    partial void OnTotalMatchesChanging(long value);
    partial void OnTotalMatchesChanged();
    partial void OnTotalBulletsFiredChanging(long value);
    partial void OnTotalBulletsFiredChanged();
    partial void OnTotalBulletsHitChanging(long value);
    partial void OnTotalBulletsHitChanged();
    partial void OnTotalKillsChanging(long value);
    partial void OnTotalKillsChanged();
    partial void OnTotalDeathsChanging(long value);
    partial void OnTotalDeathsChanged();
    partial void OnTotalLinesOfCodeChanging(long value);
    partial void OnTotalLinesOfCodeChanged();
    partial void OnTotalMultiRobotMatchesPlayedChanging(long value);
    partial void OnTotalMultiRobotMatchesPlayedChanged();
    partial void OnTotalMultiRobotMatchesWonChanging(long value);
    partial void OnTotalMultiRobotMatchesWonChanged();
    partial void OnTotalMatchesWonChanging(long value);
    partial void OnTotalMatchesWonChanged();
    partial void OnTotalDamageReceivedChanging(long value);
    partial void OnTotalDamageReceivedChanged();
    partial void OnRatioKillToDeathChanging(double value);
    partial void OnRatioKillToDeathChanged();
    partial void OnRatioCodeToScoreChanging(double value);
    partial void OnRatioCodeToScoreChanged();
    partial void OnRatioWinToLossChanging(double value);
    partial void OnRatioWinToLossChanged();
    partial void OnRatioHitsToMissChanging(double value);
    partial void OnRatioHitsToMissChanged();
    partial void OnRatioMultiRobotMatchWinsToLossChanging(double value);
    partial void OnRatioMultiRobotMatchWinsToLossChanged();
    #endregion
		
		public RobotStat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Robot", DbType="Int NOT NULL")]
		public int ID_Robot
		{
			get
			{
				return this._ID_Robot;
			}
			set
			{
				if ((this._ID_Robot != value))
				{
					this.OnID_RobotChanging(value);
					this.SendPropertyChanging();
					this._ID_Robot = value;
					this.SendPropertyChanged("ID_Robot");
					this.OnID_RobotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcRank", DbType="BigInt NOT NULL")]
		public long CalcRank
		{
			get
			{
				return this._CalcRank;
			}
			set
			{
				if ((this._CalcRank != value))
				{
					this.OnCalcRankChanging(value);
					this.SendPropertyChanging();
					this._CalcRank = value;
					this.SendPropertyChanged("CalcRank");
					this.OnCalcRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPoints", DbType="BigInt NOT NULL")]
		public long TotalPoints
		{
			get
			{
				return this._TotalPoints;
			}
			set
			{
				if ((this._TotalPoints != value))
				{
					this.OnTotalPointsChanging(value);
					this.SendPropertyChanging();
					this._TotalPoints = value;
					this.SendPropertyChanged("TotalPoints");
					this.OnTotalPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMatches", DbType="BigInt NOT NULL")]
		public long TotalMatches
		{
			get
			{
				return this._TotalMatches;
			}
			set
			{
				if ((this._TotalMatches != value))
				{
					this.OnTotalMatchesChanging(value);
					this.SendPropertyChanging();
					this._TotalMatches = value;
					this.SendPropertyChanged("TotalMatches");
					this.OnTotalMatchesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBulletsFired", DbType="BigInt NOT NULL")]
		public long TotalBulletsFired
		{
			get
			{
				return this._TotalBulletsFired;
			}
			set
			{
				if ((this._TotalBulletsFired != value))
				{
					this.OnTotalBulletsFiredChanging(value);
					this.SendPropertyChanging();
					this._TotalBulletsFired = value;
					this.SendPropertyChanged("TotalBulletsFired");
					this.OnTotalBulletsFiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBulletsHit", DbType="BigInt NOT NULL")]
		public long TotalBulletsHit
		{
			get
			{
				return this._TotalBulletsHit;
			}
			set
			{
				if ((this._TotalBulletsHit != value))
				{
					this.OnTotalBulletsHitChanging(value);
					this.SendPropertyChanging();
					this._TotalBulletsHit = value;
					this.SendPropertyChanged("TotalBulletsHit");
					this.OnTotalBulletsHitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalKills", DbType="BigInt NOT NULL")]
		public long TotalKills
		{
			get
			{
				return this._TotalKills;
			}
			set
			{
				if ((this._TotalKills != value))
				{
					this.OnTotalKillsChanging(value);
					this.SendPropertyChanging();
					this._TotalKills = value;
					this.SendPropertyChanged("TotalKills");
					this.OnTotalKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDeaths", DbType="BigInt NOT NULL")]
		public long TotalDeaths
		{
			get
			{
				return this._TotalDeaths;
			}
			set
			{
				if ((this._TotalDeaths != value))
				{
					this.OnTotalDeathsChanging(value);
					this.SendPropertyChanging();
					this._TotalDeaths = value;
					this.SendPropertyChanged("TotalDeaths");
					this.OnTotalDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLinesOfCode", DbType="BigInt NOT NULL")]
		public long TotalLinesOfCode
		{
			get
			{
				return this._TotalLinesOfCode;
			}
			set
			{
				if ((this._TotalLinesOfCode != value))
				{
					this.OnTotalLinesOfCodeChanging(value);
					this.SendPropertyChanging();
					this._TotalLinesOfCode = value;
					this.SendPropertyChanged("TotalLinesOfCode");
					this.OnTotalLinesOfCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMultiRobotMatchesPlayed", DbType="BigInt NOT NULL")]
		public long TotalMultiRobotMatchesPlayed
		{
			get
			{
				return this._TotalMultiRobotMatchesPlayed;
			}
			set
			{
				if ((this._TotalMultiRobotMatchesPlayed != value))
				{
					this.OnTotalMultiRobotMatchesPlayedChanging(value);
					this.SendPropertyChanging();
					this._TotalMultiRobotMatchesPlayed = value;
					this.SendPropertyChanged("TotalMultiRobotMatchesPlayed");
					this.OnTotalMultiRobotMatchesPlayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMultiRobotMatchesWon", DbType="BigInt NOT NULL")]
		public long TotalMultiRobotMatchesWon
		{
			get
			{
				return this._TotalMultiRobotMatchesWon;
			}
			set
			{
				if ((this._TotalMultiRobotMatchesWon != value))
				{
					this.OnTotalMultiRobotMatchesWonChanging(value);
					this.SendPropertyChanging();
					this._TotalMultiRobotMatchesWon = value;
					this.SendPropertyChanged("TotalMultiRobotMatchesWon");
					this.OnTotalMultiRobotMatchesWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMatchesWon", DbType="BigInt NOT NULL")]
		public long TotalMatchesWon
		{
			get
			{
				return this._TotalMatchesWon;
			}
			set
			{
				if ((this._TotalMatchesWon != value))
				{
					this.OnTotalMatchesWonChanging(value);
					this.SendPropertyChanging();
					this._TotalMatchesWon = value;
					this.SendPropertyChanged("TotalMatchesWon");
					this.OnTotalMatchesWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDamageReceived", DbType="BigInt NOT NULL")]
		public long TotalDamageReceived
		{
			get
			{
				return this._TotalDamageReceived;
			}
			set
			{
				if ((this._TotalDamageReceived != value))
				{
					this.OnTotalDamageReceivedChanging(value);
					this.SendPropertyChanging();
					this._TotalDamageReceived = value;
					this.SendPropertyChanged("TotalDamageReceived");
					this.OnTotalDamageReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioKillToDeath", DbType="Float NOT NULL")]
		public double RatioKillToDeath
		{
			get
			{
				return this._RatioKillToDeath;
			}
			set
			{
				if ((this._RatioKillToDeath != value))
				{
					this.OnRatioKillToDeathChanging(value);
					this.SendPropertyChanging();
					this._RatioKillToDeath = value;
					this.SendPropertyChanged("RatioKillToDeath");
					this.OnRatioKillToDeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioCodeToScore", DbType="Float NOT NULL")]
		public double RatioCodeToScore
		{
			get
			{
				return this._RatioCodeToScore;
			}
			set
			{
				if ((this._RatioCodeToScore != value))
				{
					this.OnRatioCodeToScoreChanging(value);
					this.SendPropertyChanging();
					this._RatioCodeToScore = value;
					this.SendPropertyChanged("RatioCodeToScore");
					this.OnRatioCodeToScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioWinToLoss", DbType="Float NOT NULL")]
		public double RatioWinToLoss
		{
			get
			{
				return this._RatioWinToLoss;
			}
			set
			{
				if ((this._RatioWinToLoss != value))
				{
					this.OnRatioWinToLossChanging(value);
					this.SendPropertyChanging();
					this._RatioWinToLoss = value;
					this.SendPropertyChanged("RatioWinToLoss");
					this.OnRatioWinToLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioHitsToMiss", DbType="Float NOT NULL")]
		public double RatioHitsToMiss
		{
			get
			{
				return this._RatioHitsToMiss;
			}
			set
			{
				if ((this._RatioHitsToMiss != value))
				{
					this.OnRatioHitsToMissChanging(value);
					this.SendPropertyChanging();
					this._RatioHitsToMiss = value;
					this.SendPropertyChanged("RatioHitsToMiss");
					this.OnRatioHitsToMissChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioMultiRobotMatchWinsToLoss", DbType="Float NOT NULL")]
		public double RatioMultiRobotMatchWinsToLoss
		{
			get
			{
				return this._RatioMultiRobotMatchWinsToLoss;
			}
			set
			{
				if ((this._RatioMultiRobotMatchWinsToLoss != value))
				{
					this.OnRatioMultiRobotMatchWinsToLossChanging(value);
					this.SendPropertyChanging();
					this._RatioMultiRobotMatchWinsToLoss = value;
					this.SendPropertyChanged("RatioMultiRobotMatchWinsToLoss");
					this.OnRatioMultiRobotMatchWinsToLossChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SteamWalletPaymentRecord")]
	public partial class SteamWalletPaymentRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _ID_Player;
		
		private System.DateTime _DateStarted;
		
		private System.DateTime _DateFinished;
		
		private bool _IsComplete;
		
		private bool _WasSuccess;
		
		private bool _WasFailed;
		
		private decimal _USDAmount;
		
		private decimal _GameCredits;
		
		private string _ResultText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnDateStartedChanging(System.DateTime value);
    partial void OnDateStartedChanged();
    partial void OnDateFinishedChanging(System.DateTime value);
    partial void OnDateFinishedChanged();
    partial void OnIsCompleteChanging(bool value);
    partial void OnIsCompleteChanged();
    partial void OnWasSuccessChanging(bool value);
    partial void OnWasSuccessChanged();
    partial void OnWasFailedChanging(bool value);
    partial void OnWasFailedChanged();
    partial void OnUSDAmountChanging(decimal value);
    partial void OnUSDAmountChanged();
    partial void OnGameCreditsChanging(decimal value);
    partial void OnGameCreditsChanged();
    partial void OnResultTextChanging(string value);
    partial void OnResultTextChanged();
    #endregion
		
		public SteamWalletPaymentRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStarted", DbType="DateTime NOT NULL")]
		public System.DateTime DateStarted
		{
			get
			{
				return this._DateStarted;
			}
			set
			{
				if ((this._DateStarted != value))
				{
					this.OnDateStartedChanging(value);
					this.SendPropertyChanging();
					this._DateStarted = value;
					this.SendPropertyChanged("DateStarted");
					this.OnDateStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFinished", DbType="DateTime NOT NULL")]
		public System.DateTime DateFinished
		{
			get
			{
				return this._DateFinished;
			}
			set
			{
				if ((this._DateFinished != value))
				{
					this.OnDateFinishedChanging(value);
					this.SendPropertyChanging();
					this._DateFinished = value;
					this.SendPropertyChanged("DateFinished");
					this.OnDateFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplete", DbType="Bit NOT NULL")]
		public bool IsComplete
		{
			get
			{
				return this._IsComplete;
			}
			set
			{
				if ((this._IsComplete != value))
				{
					this.OnIsCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsComplete = value;
					this.SendPropertyChanged("IsComplete");
					this.OnIsCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasSuccess", DbType="Bit NOT NULL")]
		public bool WasSuccess
		{
			get
			{
				return this._WasSuccess;
			}
			set
			{
				if ((this._WasSuccess != value))
				{
					this.OnWasSuccessChanging(value);
					this.SendPropertyChanging();
					this._WasSuccess = value;
					this.SendPropertyChanged("WasSuccess");
					this.OnWasSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasFailed", DbType="Bit NOT NULL")]
		public bool WasFailed
		{
			get
			{
				return this._WasFailed;
			}
			set
			{
				if ((this._WasFailed != value))
				{
					this.OnWasFailedChanging(value);
					this.SendPropertyChanging();
					this._WasFailed = value;
					this.SendPropertyChanged("WasFailed");
					this.OnWasFailedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USDAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal USDAmount
		{
			get
			{
				return this._USDAmount;
			}
			set
			{
				if ((this._USDAmount != value))
				{
					this.OnUSDAmountChanging(value);
					this.SendPropertyChanging();
					this._USDAmount = value;
					this.SendPropertyChanged("USDAmount");
					this.OnUSDAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameCredits", DbType="Decimal(18,2) NOT NULL")]
		public decimal GameCredits
		{
			get
			{
				return this._GameCredits;
			}
			set
			{
				if ((this._GameCredits != value))
				{
					this.OnGameCreditsChanging(value);
					this.SendPropertyChanging();
					this._GameCredits = value;
					this.SendPropertyChanged("GameCredits");
					this.OnGameCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultText", DbType="NVarChar(2050) NOT NULL", CanBeNull=false)]
		public string ResultText
		{
			get
			{
				return this._ResultText;
			}
			set
			{
				if ((this._ResultText != value))
				{
					this.OnResultTextChanging(value);
					this.SendPropertyChanging();
					this._ResultText = value;
					this.SendPropertyChanged("ResultText");
					this.OnResultTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThreadForum")]
	public partial class ThreadForum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _CreateDate;
		
		private int _TotalViews;
		
		private int _ID_Player;
		
		private string _Heading;
		
		private string _Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnTotalViewsChanging(int value);
    partial void OnTotalViewsChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnHeadingChanging(string value);
    partial void OnHeadingChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    #endregion
		
		public ThreadForum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalViews", DbType="Int NOT NULL")]
		public int TotalViews
		{
			get
			{
				return this._TotalViews;
			}
			set
			{
				if ((this._TotalViews != value))
				{
					this.OnTotalViewsChanging(value);
					this.SendPropertyChanging();
					this._TotalViews = value;
					this.SendPropertyChanged("TotalViews");
					this.OnTotalViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThreadReply")]
	public partial class ThreadReply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Thread;
		
		private int _ID_Player;
		
		private System.DateTime _CreateDate;
		
		private string _ReplyText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ThreadChanging(int value);
    partial void OnID_ThreadChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnReplyTextChanging(string value);
    partial void OnReplyTextChanged();
    #endregion
		
		public ThreadReply()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Thread", DbType="Int NOT NULL")]
		public int ID_Thread
		{
			get
			{
				return this._ID_Thread;
			}
			set
			{
				if ((this._ID_Thread != value))
				{
					this.OnID_ThreadChanging(value);
					this.SendPropertyChanging();
					this._ID_Thread = value;
					this.SendPropertyChanged("ID_Thread");
					this.OnID_ThreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ReplyText
		{
			get
			{
				return this._ReplyText;
			}
			set
			{
				if ((this._ReplyText != value))
				{
					this.OnReplyTextChanging(value);
					this.SendPropertyChanging();
					this._ReplyText = value;
					this.SendPropertyChanged("ReplyText");
					this.OnReplyTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tutorial")]
	public partial class Tutorial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _CreateDate;
		
		private int _TotalViews;
		
		private int _ID_Player;
		
		private string _Heading;
		
		private string _Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnTotalViewsChanging(int value);
    partial void OnTotalViewsChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnHeadingChanging(string value);
    partial void OnHeadingChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    #endregion
		
		public Tutorial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalViews", DbType="Int NOT NULL")]
		public int TotalViews
		{
			get
			{
				return this._TotalViews;
			}
			set
			{
				if ((this._TotalViews != value))
				{
					this.OnTotalViewsChanging(value);
					this.SendPropertyChanging();
					this._TotalViews = value;
					this.SendPropertyChanged("TotalViews");
					this.OnTotalViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TutorialReply")]
	public partial class TutorialReply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Thread;
		
		private int _ID_Player;
		
		private System.DateTime _CreateDate;
		
		private string _ReplyText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ThreadChanging(int value);
    partial void OnID_ThreadChanged();
    partial void OnID_PlayerChanging(int value);
    partial void OnID_PlayerChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnReplyTextChanging(string value);
    partial void OnReplyTextChanged();
    #endregion
		
		public TutorialReply()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Thread", DbType="Int NOT NULL")]
		public int ID_Thread
		{
			get
			{
				return this._ID_Thread;
			}
			set
			{
				if ((this._ID_Thread != value))
				{
					this.OnID_ThreadChanging(value);
					this.SendPropertyChanging();
					this._ID_Thread = value;
					this.SendPropertyChanged("ID_Thread");
					this.OnID_ThreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Player", DbType="Int NOT NULL")]
		public int ID_Player
		{
			get
			{
				return this._ID_Player;
			}
			set
			{
				if ((this._ID_Player != value))
				{
					this.OnID_PlayerChanging(value);
					this.SendPropertyChanging();
					this._ID_Player = value;
					this.SendPropertyChanged("ID_Player");
					this.OnID_PlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ReplyText
		{
			get
			{
				return this._ReplyText;
			}
			set
			{
				if ((this._ReplyText != value))
				{
					this.OnReplyTextChanging(value);
					this.SendPropertyChanging();
					this._ReplyText = value;
					this.SendPropertyChanged("ReplyText");
					this.OnReplyTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
